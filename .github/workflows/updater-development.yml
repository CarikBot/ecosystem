name: Generate Package List

on:
  push:
    branches:
      - development

jobs:
  prepare_package:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
         persist-credentials: false
         fetch-depth: 0

      - name: Use node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node.js modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-
            
      - name: Install dependencies
        run: yarn

      - name: Check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file =~ \.mm$ ]]; then
              node source/tools/formatter.js $file
            fi
          done < files.txt
          rm -rf files.txt

      - name: Generate file Package List
        if: github.repository == 'CarikBot/ecosystem'
        run: yarn toPackageList

      - name: Modify last update
        if: github.repository == 'CarikBot/ecosystem'
        run: |
          d=`date '+%Y-%m-%dT%H:%M:%SZ'`
          echo $d > LAST_UPDATED
          
      - name: Commit files report
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "[Github Actions]: Generate Package List file" || true
          exit 0
          
      - name: GitHub Push
        uses: ad-m/github-push-action@v0.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
