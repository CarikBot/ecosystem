{"root":{"intent":"AgileManifesto","secret_keyword":"amo","pattern":["agile manifesto"],"type":"action","text":["*Manifesto for Agile Software Development*\n\n_We are uncovering better ways of developing software by doing it and helping others do it._\n\nThrough this work we have come to value:\n*Individuals and interactions* over processes and tools\n*Working software* over comprehensive documentation\n*Customer collaboration* over contract negotiation\n*Responding to change* over following a plan\n\nThat is, while there is value in the items on\nthe right, we value the items on the left more.\n\n[agilemanifesto.org](https:\/\/agilemanifesto.org\/)"],"action":{"type":"button","data":{"\ud83d\uddd3 Principles":{"intent":"AgileManifesto-Principles","id":"193b56735e689ae86a01d91513","type":"text","text":["*12 Principles behind the Agile Manifesto*\n\nWe follow these principles:\n\nOur highest priority is to satisfy the customer\nthrough early and continuous delivery\nof valuable software.\n\nWelcome changing requirements, even late in\ndevelopment. Agile processes harness change for\nthe customer's competitive advantage.\n\nDeliver working software frequently, from a\ncouple of weeks to a couple of months, with a\npreference to the shorter timescale.\n\nBusiness people and developers must work\ntogether daily throughout the project.\n\nBuild projects around motivated individuals.\nGive them the environment and support they need,\nand trust them to get the job done.\n\nThe most efficient and effective method of\nconveying information to and within a development\nteam is face-to-face conversation.\n\nWorking software is the primary measure of progress.\n\nAgile processes promote sustainable development.\nThe sponsors, developers, and users should be able\nto maintain a constant pace indefinitely.\n\nContinuous attention to technical excellence\nand good design enhances agility.\n\nSimplicity--the art of maximizing the amount\nof work not done--is essential.\n\nThe best architectures, requirements, and designs\nemerge from self-organizing teams.\n\nAt regular intervals, the team reflects on how\nto become more effective, then tunes and adjusts\nits behavior accordingly. \n\n[AgileManifesto.org](https:\/\/agilemanifesto.org\/principles.html)\n"],"pattern":["principles of agile","principles behind the agile"]},"\ud83d\udcdd Signatories":{"intent":"AgileManifesto-Signatories","id":"624a5ab8e8c14d73bd22d59ba7a75861","type":"text","text":["*Independent Signatories of The Manifesto for Agile Software Development*\n\nWe are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:\n\n- Individuals and interactions over processes and tools.\n- Working software over comprehensive documentation.\n- Customer collaboration over contract negotiation.\n- Responding to change over following a plan.\n\nThat is, while there is value in the items on the right, we value the items on the left more. \n\n[More about signatories](https:\/\/agilemanifesto.org\/display\/index.html)\n"],"pattern":["signatories of the agile","signatories of agile"]},"\ud83c\udfc5 About":{"intent":"AgileManifesto-About","id":"42l5hmkf6h40aq0laeuqjvqim6","type":"text","text":["*History: The Agile Manifesto*\n\nOn February 11-13, 2001, at The Lodge at Snowbird ski resort in the Wasatch mountains of Utah, seventeen people met to talk, ski, relax, and try to find common ground\u2014and of course, to eat. What emerged was the Agile \u2018Software Development\u2019 Manifesto. Representatives from Extreme Programming, SCRUM, DSDM, Adaptive Software Development, Crystal, Feature-Driven Development, Pragmatic Programming, and others sympathetic to the need for an alternative to documentation driven, heavyweight software development processes convened.\n\nNow, a bigger gathering of organizational anarchists would be hard to find, so what emerged from this meeting was symbolic\u2014a Manifesto for Agile Software Development\u2014signed by all participants. The only concern with the term agile came from Martin Fowler (a Brit for those who don\u2019t know him) who allowed that most Americans didn\u2019t know how to pronounce the word \u2018agile\u2019.\n\nAlistair Cockburn\u2019s initial concerns reflected the early thoughts of many participants. \"I personally didn't expect that this particular group of agilites to ever agree on anything substantive.\" But his post-meeting feelings were also shared, \"Speaking for myself, I am delighted by the final phrasing [of the Manifesto]. I was surprised that the others appeared equally delighted by the final phrasing. So we did agree on something substantive.\"\n\nNaming ourselves \"The Agile Alliance,\" this group of independent thinkers about software development, and sometimes competitors to each other, agreed on the Manifesto for Agile Software Development displayed on the title page of this web site.\n\nBut while the Manifesto provides some specific ideas, there is a deeper theme that drives many, but not all, to be sure, members of the alliance. At the close of the two-day meeting, Bob Martin joked that he was about to make a \"mushy\" statement. But while tinged with humor, few disagreed with Bob\u2019s sentiments\u2014that we all felt privileged to work with a group of people who held a set of compatible values, a set of values based on trust and respect for each other and promoting organizational models based on people, collaboration, and building the types of organizational communities in which we would want to work. At the core, I believe Agile Methodologists are really about \"mushy\" stuff\u2014about delivering good products to customers by operating in an environment that does more than talk about \"people as our most important asset\" but actually \"acts\" as if people were the most important, and lose the word \"asset\". So in the final analysis, the meteoric rise of interest in\u2014and sometimes tremendous criticism of\u2014Agile Methodologies is about the mushy stuff of values and culture.\n\nFor example, I think that ultimately, Extreme Programming has mushroomed in use and interest, not because of pair-programming or refactoring, but because, taken as a whole, the practices define a developer community freed from the baggage of Dilbertesque corporations. Kent Beck tells the story of an early job in which he estimated a programming effort of six weeks for two people. After his manager reassigned the other programmer at the beginning of the project, he completed the project in twelve weeks\u2014and felt terrible about himself! The boss\u2014of course\u2014harangued Kent about how slow he was throughout the second six weeks. Kent, somewhat despondent because he was such a \"failure\" as a programmer, finally realized that his original estimate of 6 weeks was extremely accurate\u2014for 2 people\u2014and that his \"failure\" was really the manager\u2019s failure , indeed, the failure of the standard \"fixed\" process mindset that so frequently plagues our industry.\n\nThis type of situation goes on every day\u2014marketing, or management, or external customers, internal customers, and, yes, even developers\u2014don\u2019t want to make hard trade-off decisions, so they impose irrational demands through the imposition of corporate power structures. This isn\u2019t merely a software development problem, it runs throughout Dilbertesque organizations.\n\nIn order to succeed in the new economy, to move aggressively into the era of e-business, e-commerce, and the web, companies have to rid themselves of their Dilbert manifestations of make-work and arcane policies. This freedom from the inanities of corporate life attracts proponents of Agile Methodologies, and scares the begeebers (you can\u2019t use the word \u2018shit\u2019 in a professional paper) out of traditionalists. Quite frankly, the Agile approaches scare corporate bureaucrats\u2014 at least those that are happy pushing process for process\u2019 sake versus trying to do the best for the \"customer\" and deliver something timely and tangible and \"as promised\"\u2014because they run out of places to hide.\n\nThe Agile movement is not anti-methodology, in fact, many of us want to restore credibility to the word methodology. We want to restore a balance. We embrace modeling, but not in order to file some diagram in a dusty corporate repository. We embrace documentation, but not hundreds of pages of never-maintained and rarely-used tomes. We plan, but recognize the limits of planning in a turbulent environment. Those who would brand proponents of XP or SCRUM or any of the other Agile Methodologies as \"hackers\" are ignorant of both the methodologies and the original definition of the term hacker.\n\nThe meeting at Snowbird was incubated at an earlier get together of Extreme Programming proponents, and a few \"outsiders,\" organized by Kent Beck at the Rogue River Lodge in Oregon in the spring of 2000. At the Rogue River meeting attendees voiced support for a variety of \"Light\" methodologies, but nothing formal occurred. During 2000 a number of articles were written that referenced the category of \"Light\" or \"Lightweight\" processes. A number these articles referred to \"Light methodologies, such as Extreme Programming, Adaptive Software Development, Crystal, and SCRUM\". In conversations, no one really liked the moniker \"Light\", but it seemed to stick for the time being.\n\nIn September 2000, Bob Martin from Object Mentor in Chicago, started the next meeting ball rolling with an email; \"I'd like to convene a small (two day) conference in the January to February 2001 timeframe here in Chicago. The purpose of this conference is to get all the lightweight method leaders in one room. All of you are invited; and I'd be interested to know who else I should approach.\" Bob set up a Wiki site and the discussions raged.\n\nEarly on, Alistair Cockburn weighed in with an epistle that identified the general disgruntlement with the word \u2018Light\u2019: \"I don't mind the methodology being called light in weight, but I'm not sure I want to be referred to as a lightweight attending a lightweight methodologists meeting. It somehow sounds like a bunch of skinny, feebleminded lightweight people trying to remember what day it is.\"\n\nThe fiercest debate was over location! There was serious concern about Chicago in wintertime\u2014cold and nothing fun to do; Snowbird, Utah\u2014cold, but fun things to do, at least for those who ski on their heads like Martin Fowler tried on day one; and Anguilla in the Caribbean\u2014warm and fun, but time consuming to get to. In the end, Snowbird and skiing won out; however, a few people\u2014like Ron Jeffries\u2014want a warmer place next time.\n\nWe hope that our work together as the Agile Alliance helps others in our profession to think about software development, methodologies, and organizations, in new\u2013 more agile \u2013 ways. If so, we\u2019ve accomplished our goals.\n\nJim Highsmith, for the Agile Alliance\n\n\u00a92001 Jim Highsmith\n\n"],"pattern":["about agile manifesto"]},"\ud83c\udfc6 Agile Indonesia":{"intent":"AgileManifesto-Agile-Indonesia","id":"243kq8hnan80l383tnv6autphs","type":"action","text":["*Agile Indonesia*\n\nDiscuss anything under the umbrella of Agilemanifesto.org and its 40+ practices. Foreigner & English is okay. You can post your Agile or software engineering related event as long as ticket price <= Rp400,000. Beyond that please contact admins. Enjoy!\n\n[Agile Indonesia](https:\/\/t.me\/agileindonesia)\n"],"action":{"type":"button","data":{"\ud83c\udfe0 Manifesto":{"intent":"AgileManifesto-Agile-Indonesia-Manifesto","id":"3lhokqg5o575t2dp1llc153lcf","callback_data":"agile manifesto","type":"text","text":[""]}}},"pattern":["agile indonesia"]}}}}}